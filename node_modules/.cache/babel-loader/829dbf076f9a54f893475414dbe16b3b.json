{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/do-you-know-me-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/do-you-know-me-frontend/src/start-page/startPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { State, Socket } from '../store';\nimport useSocket from 'use-socket.io-client';\nimport GameScreen from '../game-screen/gameScreen';\nimport GameController from '../game-controller/gameController';\nimport { socket } from '../App';\n\nconst StartPage = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        room = _useState2[0],\n        setRoom = _useState2[1];\n\n  const _useContext = useContext(State),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  useEffect(() => {\n    console.log(socket);\n    socket.on('joinedGame', (gameState, playerId) => {\n      console.log('Joined1');\n      dispatch({\n        type: 'UPDATE_GAME_STATE',\n        payload: gameState\n      });\n    });\n    socket.on('rejection', error => {\n      alert(error);\n    });\n  }, []);\n\n  const connectToGame = roomName => {\n    socket.emit('join', roomName, state.playerId);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, state.gameStarted || (state.gameState || {}).room ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, state.gameStarted ? React.createElement(GameScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(GameController, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'GAME_STARTED',\n      payload: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Start Game\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Or Join a game \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setRoom(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => connectToGame(room, state),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Join game\")))));\n};\n\nexport default StartPage;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/do-you-know-me-frontend/src/start-page/startPage.js"],"names":["React","useEffect","useState","useContext","State","Socket","useSocket","GameScreen","GameController","socket","StartPage","room","setRoom","state","dispatch","console","log","on","gameState","playerId","type","payload","error","alert","connectToGame","roomName","emit","gameStarted","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACER,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,QACfS,IADe;AAAA,QACTC,OADS;;AAAA,sBAEMT,UAAU,CAACC,KAAD,CAFhB;AAAA,QAEdS,KAFc,eAEdA,KAFc;AAAA,QAEPC,QAFO,eAEPA,QAFO;;AAItBb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEAA,IAAAA,MAAM,CAACQ,EAAP,CAAU,YAAV,EAAwB,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAC/CJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAF,MAAAA,QAAQ,CAAC;AAACM,QAAAA,IAAI,EAAE,mBAAP;AAA4BC,QAAAA,OAAO,EAAEH;AAArC,OAAD,CAAR;AACD,KAHD;AAKAT,IAAAA,MAAM,CAACQ,EAAP,CAAU,WAAV,EAAwBK,KAAD,IAAW;AAChCC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAME,aAAa,GAAIC,QAAD,IAAc;AAClChB,IAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoBD,QAApB,EAA8BZ,KAAK,CAACM,QAApC;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACc,WAAN,IAAqB,CAACd,KAAK,CAACK,SAAN,IAAmB,EAApB,EAAwBP,IAA7C,GACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBE,KAAK,CAACc,WAAN,GAAoB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAAgD,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjE,CADD,GAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,OAAO,EAAE,MAAMb,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGO,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMN,aAAa,CAACb,IAAD,EAAOE,KAAP,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CALF,CADD,CAHL,CADF;AAsBD,CA3CD;;AA6CA,eAAeH,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { State, Socket } from '../store'\nimport useSocket from 'use-socket.io-client';\nimport GameScreen from '../game-screen/gameScreen';\nimport GameController from '../game-controller/gameController';\nimport {socket} from '../App';\n\n\nconst StartPage = () => {\n  const [room, setRoom] = useState('');\n  const { state, dispatch } = useContext(State)\n\n  useEffect(() => {\n    console.log(socket)\n\n    socket.on('joinedGame', (gameState, playerId) => {\n      console.log('Joined1')\n      dispatch({type: 'UPDATE_GAME_STATE', payload: gameState})\n    })\n\n    socket.on('rejection', (error) => {\n      alert(error)\n    })\n  }, [])\n\n  const connectToGame = (roomName) => {\n    socket.emit('join', roomName, state.playerId);\n  }\n  \n  return (\n    <React.Fragment>\n      {state.gameStarted || (state.gameState || {}).room ? \n        <React.Fragment>{state.gameStarted ? <GameScreen></GameScreen> : <GameController></GameController>}</React.Fragment>\n      : (<div className=\"App\">\n          <header className=\"App-header\">\n            <p>\n              {/* // <Link to={\"/gameScreen\"}>Start a Game</Link> */}\n              <button onClick={() => dispatch({ type: 'GAME_STARTED', payload: true})}>Start Game</button>\n            </p>\n            <p>\n              Or Join a game <br/>\n              <input type=\"text\" onChange={(e) => setRoom(e.target.value)}></input>\n              <br/>\n              <button onClick={() => connectToGame(room, state)}>\n                Join game\n              </button>\n            </p>\n          </header>\n        </div>)}\n    </React.Fragment>\n  );\n}\n\nexport default StartPage;"]},"metadata":{},"sourceType":"module"}