{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/testGame/test-game/src/App.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.scss';\nimport StartPage from './start-page/startPage';\nimport { State, initialState, reducer, Socket, createSocketConnection } from './store';\n\nconst App = () => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const _createSocketConnecti = createSocketConnection(),\n        _createSocketConnecti2 = _slicedToArray(_createSocketConnecti, 1),\n        socket = _createSocketConnecti2[0];\n\n  useEffect(() => {\n    if (sessionStorage.getItem('state')) {\n      dispatch({\n        type: 'REPOPULATE_STATE',\n        payload: JSON.parse(sessionStorage.getItem('state'))\n      });\n    }\n  }, []);\n  useEffect(() => {\n    sessionStorage.setItem('state', JSON.stringify(state));\n    console.log('State changed ðŸ”¥: ', state);\n  }, [state]);\n  return React.createElement(Socket.Provider, {\n    value: socket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(State.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: StartPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/App.js"],"names":["React","useReducer","useEffect","BrowserRouter","Router","Route","StartPage","State","initialState","reducer","Socket","createSocketConnection","App","state","dispatch","socket","sessionStorage","getItem","type","payload","JSON","parse","setItem","stringify","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,sBALF,QAMO,SANP;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA,sBACUX,UAAU,CAACQ,OAAD,EAAUD,YAAV,CADpB;AAAA;AAAA,QACTK,KADS;AAAA,QACFC,QADE;;AAAA,gCAECH,sBAAsB,EAFvB;AAAA;AAAA,QAETI,MAFS;;AAGhBb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAJ,EAAqC;AACnCH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWL,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX;AAApC,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,cAAc,CAACM,OAAf,CAAuB,OAAvB,EAAgCF,IAAI,CAACG,SAAL,CAAeV,KAAf,CAAhC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCZ,KAAlC;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAQA,SACE,oBAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,EAAGE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CADF,CADF;AAUD,CA3BD;;AA6BA,eAAeM,GAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.scss';\nimport StartPage from './start-page/startPage';\nimport { \n  State, \n  initialState,\n  reducer,\n  Socket,\n  createSocketConnection,\n} from './store'\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [socket] = createSocketConnection();\n  useEffect(() => {\n    if (sessionStorage.getItem('state')) {\n      dispatch({type: 'REPOPULATE_STATE', payload: JSON.parse(sessionStorage.getItem('state'))})\n    }\n  }, [])\n\n  useEffect(() => {\n    sessionStorage.setItem('state', JSON.stringify(state))\n    console.log('State changed ðŸ”¥: ', state)\n  }, [state]);\n\n  \n\n\n  return (\n    <Socket.Provider value={ socket }>\n      <State.Provider value={{ state, dispatch }}>\n        <Router>\n            <Route exact path=\"/\" component={StartPage} />\n        </Router>\n      </State.Provider>\n    </Socket.Provider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}