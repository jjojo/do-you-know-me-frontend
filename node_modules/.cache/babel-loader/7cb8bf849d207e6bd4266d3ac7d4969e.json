{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/testGame/test-game/src/start-page/startPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport useSocket from 'use-socket.io-client';\nimport { Link } from 'react-router-dom';\nimport { State } from '../store';\nimport GameScreen from '../game-screen/gameScreen';\nimport GameController from '../game-controller/gameController';\n\nconst StartPage = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        room = _useState2[0],\n        setRoom = _useState2[1]; // const [socket] = useSocket('http://localhost:3000', {\n  //   autoConnect: false,\n  // })\n\n\n  const _useContext = useContext(State),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  useEffect(() => {\n    state.socket.on('gameCreated', state => {\n      console.log(state);\n      dispatch({\n        type: 'GAME_STARTED',\n        payload: true\n      });\n      setRoom(state.room);\n    });\n    state.socket.on('joinedGame', gameState => {\n      console.log('Joined1');\n      dispatch({\n        type: 'JOINED_GAME',\n        payload: gameState\n      });\n    });\n    state.socket.on('gameUpdate', gameState => {\n      console.log(gameState);\n    });\n  }, []);\n\n  const connectToGame = roomName => {\n    state.socket.emit('join', roomName);\n  };\n\n  const createGame = () => {\n    state.socket.emit('createGame');\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, !state.gameStarted || !state.joinedGame ? React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => createGame(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Start Game\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Or Join a game \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setRoom(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => connectToGame(room, state),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Join game\")))) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, state.gameStarted ? React.createElement(GameScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : React.createElement(GameController, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nexport default StartPage;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/start-page/startPage.js"],"names":["React","useEffect","useState","useContext","useSocket","Link","State","GameScreen","GameController","StartPage","room","setRoom","state","dispatch","socket","on","console","log","type","payload","gameState","connectToGame","roomName","emit","createGame","gameStarted","joinedGame","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport useSocket from 'use-socket.io-client';\nimport { Link } from 'react-router-dom';\nimport { State } from '../store'\nimport GameScreen from '../game-screen/gameScreen';\nimport GameController from '../game-controller/gameController';\n\n\n\nconst StartPage = () => {\n  const [room, setRoom] = useState('');\n  // const [socket] = useSocket('http://localhost:3000', {\n  //   autoConnect: false,\n  // })\n  const { state, dispatch } = useContext(State)\n\n  useEffect(() => {\n    state.socket.on('gameCreated', (state) => {\n      console.log(state)\n      dispatch({type: 'GAME_STARTED', payload: true})\n      setRoom(state.room)\n    })\n\n    state.socket.on('joinedGame', (gameState) => {\n      console.log('Joined1')\n      dispatch({type: 'JOINED_GAME', payload: gameState})\n    })\n    \n    state.socket.on('gameUpdate', (gameState) => {\n      console.log(gameState)\n    })\n    \n  }, [])\n\n  const connectToGame = (roomName) => {\n    state.socket.emit('join', roomName);\n  }\n\n  const createGame = () => {\n    state.socket.emit('createGame');\n  }\n  \n  return (\n    <React.Fragment>\n      {!state.gameStarted || !state.joinedGame ? (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>\n              {/* // <Link to={\"/gameScreen\"}>Start a Game</Link> */}\n              <button onClick={() => createGame()}>Start Game</button>\n            </p>\n            <p>\n              Or Join a game <br/>\n              <input type=\"text\" onChange={(e) => setRoom(e.target.value)}></input>\n              <br/>\n              <button onClick={() => connectToGame(room, state)}>Join game</button>\n            </p>\n          </header>\n        </div>)\n      : <React.Fragment>{state.gameStarted ? <GameScreen></GameScreen> : <GameController></GameController>}</React.Fragment> }\n    </React.Fragment>\n  );\n}\n\nexport default StartPage;"]},"metadata":{},"sourceType":"module"}