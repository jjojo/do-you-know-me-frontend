{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/testGame/test-game/src/game-screen/gameScreen.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { State } from '../store';\n\nconst GameScreen = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        gameState = _useState2[0],\n        setGameState = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useContext = useContext(State),\n        state = _useContext.state;\n\n  console.log(state.socket);\n  useEffect(() => {\n    createGame();\n    state.socket.on('gameCreated', state => {\n      console.log(state);\n      setRoom(state.room);\n    });\n    state.socket.on('gameUpdate', gameState => {\n      console.log(gameState);\n      setGameState(gameState);\n    });\n  }, []);\n\n  const createGame = () => {\n    state.socket.emit('createGame');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, gameState.name || 'Game room loading'), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Room number: \", room), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, JSON.stringify(gameState, null, \"  \")));\n};\n\nexport default GameScreen;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/game-screen/gameScreen.js"],"names":["React","useState","useEffect","useContext","State","GameScreen","gameState","setGameState","room","setRoom","state","console","log","socket","createGame","on","emit","name","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QAChBK,SADgB;AAAA,QACLC,YADK;;AAAA,qBAECN,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,QAEhBO,IAFgB;AAAA,QAEVC,OAFU;;AAAA,sBAGJN,UAAU,CAACC,KAAD,CAHN;AAAA,QAGfM,KAHe,eAGfA,KAHe;;AAKvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACVJ,IAAAA,KAAK,CAACG,MAAN,CAAaE,EAAb,CAAgB,aAAhB,EAAgCL,KAAD,IAAW;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAD,MAAAA,OAAO,CAACC,KAAK,CAACF,IAAP,CAAP;AACD,KAHD;AAKAE,IAAAA,KAAK,CAACG,MAAN,CAAaE,EAAb,CAAgB,YAAhB,EAA+BT,SAAD,IAAe;AAC3CK,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAHD;AAID,GAXQ,EAWN,EAXM,CAAT;;AAcA,QAAMQ,UAAU,GAAG,MAAM;AACvBJ,IAAAA,KAAK,CAACG,MAAN,CAAaG,IAAb,CAAkB,YAAlB;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,SAAS,CAACW,IAAV,IAAkB,mBADrB,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBT,IAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,IAAI,CAACC,SAAL,CAAeb,SAAf,EAA0B,IAA1B,EAAgC,IAAhC,CADH,CALF,CADF;AAWD,CArCD;;AAuCA,eAAeD,UAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { State } from '../store'\n\n\n\nconst GameScreen = () => {\n  const [gameState, setGameState] = useState({});\n  const [room, setRoom] = useState(null);\n  const { state, } = useContext(State)\n\n  console.log(state.socket)\n \n \n  useEffect(() => {\n    createGame()\n    state.socket.on('gameCreated', (state) => {\n      console.log(state)\n      setRoom(state.room)\n    })\n\n    state.socket.on('gameUpdate', (gameState) => {\n      console.log(gameState)\n      setGameState(gameState)\n    })\n  }, [])\n\n\n  const createGame = () => {\n    state.socket.emit('createGame');\n  }\n  \n  return (\n    <div>\n      <h1>\n        {gameState.name || 'Game room loading'} \n      </h1>\n      <h3>Room number: {room}</h3>\n      <p>\n        {JSON.stringify(gameState, null, \"  \")}\n      </p>\n    </div>\n  )\n}\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}