{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/testGame/test-game/src/game-screen/gameScreen.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { State } from '../store';\nimport { socket } from '../App';\nimport LeavRoom from '../leave-room/leaveRoom';\n\nconst GameScreen = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        gameState = _useState2[0],\n        setGameState = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useContext = useContext(State),\n        state = _useContext.state,\n        dispatch = _useContext.dispatch;\n\n  console.log(socket);\n  useEffect(() => {\n    createGame((state.gameState || {}).room);\n    socket.on('gameCreated', gameState => {\n      console.log('GAME CREATED: ', gameState);\n      dispatch({\n        type: 'UPDATE_GAME_STATE',\n        payload: gameState\n      });\n    });\n    socket.on('gameUpdate', gameState => {\n      console.log('GAME STATE UPDATED: ', gameState);\n      dispatch({\n        type: 'UPDATE_GAME_STATE',\n        payload: gameState\n      });\n    });\n  }, []);\n\n  const createGame = room => {\n    socket.emit('createGame', room);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, (state.gameState || {}).name || 'Game room loading', React.createElement(LeavRoom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Room number: \", (state.gameState || {}).room), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, JSON.stringify(state.gameState, null, \"  \")));\n};\n\nexport default GameScreen;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/game-screen/gameScreen.js"],"names":["React","useState","useEffect","useContext","State","socket","LeavRoom","GameScreen","gameState","setGameState","room","setRoom","state","dispatch","console","log","createGame","on","type","payload","emit","name","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAKA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACWN,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QAChBO,SADgB;AAAA,QACLC,YADK;;AAAA,qBAECR,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,QAEhBS,IAFgB;AAAA,QAEVC,OAFU;;AAAA,sBAIKR,UAAU,CAACC,KAAD,CAJf;AAAA,QAIfQ,KAJe,eAIfA,KAJe;AAAA,QAIRC,QAJQ,eAIRA,QAJQ;;AAMvBC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,CAACJ,KAAK,CAACJ,SAAN,IAAmB,EAApB,EAAwBE,IAAzB,CAAV;AACAL,IAAAA,MAAM,CAACY,EAAP,CAAU,aAAV,EAA0BT,SAAD,IAAe;AACtCM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,SAA9B;AACAK,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,mBAAP;AAA4BC,QAAAA,OAAO,EAAEX;AAArC,OAAD,CAAR;AACD,KAHD;AAKAH,IAAAA,MAAM,CAACY,EAAP,CAAU,YAAV,EAAyBT,SAAD,IAAe;AACrCM,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,SAApC;AACAK,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,mBAAP;AAA4BC,QAAAA,OAAO,EAAEX;AAArC,OAAD,CAAR;AACD,KAHD;AAID,GAXQ,EAWN,EAXM,CAAT;;AAgBA,QAAMQ,UAAU,GAAIN,IAAD,IAAU;AAC3BL,IAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ,EAA0BV,IAA1B;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,KAAK,CAACJ,SAAN,IAAmB,EAApB,EAAwBa,IAAxB,IAAgC,mBADnC,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkB,CAACT,KAAK,CAACJ,SAAN,IAAmB,EAApB,EAAwBE,IAA1C,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,IAAI,CAACC,SAAL,CAAeX,KAAK,CAACJ,SAArB,EAAgC,IAAhC,EAAsC,IAAtC,CADH,CANF,CADF;AAYD,CAzCD;;AA2CA,eAAeD,UAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { State } from '../store'\nimport {socket} from '../App';\nimport LeavRoom from '../leave-room/leaveRoom';\n\n\n\n\nconst GameScreen = () => {\n  const [gameState, setGameState] = useState({});\n  const [room, setRoom] = useState(null);\n\n  const { state, dispatch } = useContext(State)\n\n  console.log(socket)\n \n \n  useEffect(() => {\n    createGame((state.gameState || {}).room)\n    socket.on('gameCreated', (gameState) => {\n      console.log('GAME CREATED: ', gameState)\n      dispatch({type: 'UPDATE_GAME_STATE', payload: gameState})\n    })\n\n    socket.on('gameUpdate', (gameState) => {\n      console.log('GAME STATE UPDATED: ', gameState)\n      dispatch({type: 'UPDATE_GAME_STATE', payload: gameState})\n    })\n  }, [])\n\n  \n\n\n  const createGame = (room) => {\n    socket.emit('createGame', room);\n  }\n  \n  return (\n    <div>\n      <h1>\n        {(state.gameState || {}).name || 'Game room loading'} \n        <LeavRoom></LeavRoom>\n      </h1>\n      <h3>Room number: {(state.gameState || {}).room}</h3>\n      <pre>\n        {JSON.stringify(state.gameState, null, \"  \")}\n      </pre>\n    </div>\n  )\n}\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}