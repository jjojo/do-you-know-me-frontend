{"ast":null,"code":"import _defineProperty from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport * as io from 'socket.io-client';\n\nconst createSocketConnection = url => {\n  const connection = io(url, {\n    reconnectionDelay: 1000,\n    reconnection: true,\n    reconnectionAttempts: 10,\n    transports: ['websocket'],\n    agent: false,\n    // [2] Please don't set this to true\n    upgrade: false,\n    rejectUnauthorized: false\n  });\n  console.log(connection);\n  sessionStorage.setItem('socket', JSON.stringify(connection));\n  return connection;\n};\n\nexport const initialState = {\n  socket: JSON.parse(sessionStorage.getItem('socket')) || createSocketConnection('http://192.168.1.48:3000'),\n  gameStarted: false,\n  joinedGame: false\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'GAME_STARTED':\n      return _objectSpread({}, state, {\n        gameStarted: action.payload\n      });\n\n    case 'JOINED_GAME':\n      return _objectSpread({}, state, {\n        joinedGame: action.payload\n      });\n\n    case 'UPDATE_GAME_STATE':\n      return _objectSpread({}, state, {\n        gameState: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const State = React.createContext();","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/store.js"],"names":["React","io","createSocketConnection","url","connection","reconnectionDelay","reconnection","reconnectionAttempts","transports","agent","upgrade","rejectUnauthorized","console","log","sessionStorage","setItem","JSON","stringify","initialState","socket","parse","getItem","gameStarted","joinedGame","reducer","state","action","type","payload","gameState","State","createContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;;AAEA,MAAMC,sBAAsB,GAAIC,GAAD,IAAS;AACtC,QAAMC,UAAU,GAAIH,EAAE,CAACE,GAAD,EAAM;AAC1BE,IAAAA,iBAAiB,EAAE,IADO;AAE1BC,IAAAA,YAAY,EAAC,IAFa;AAG1BC,IAAAA,oBAAoB,EAAE,EAHI;AAI1BC,IAAAA,UAAU,EAAE,CAAC,WAAD,CAJc;AAK1BC,IAAAA,KAAK,EAAE,KALmB;AAKZ;AACdC,IAAAA,OAAO,EAAE,KANiB;AAO1BC,IAAAA,kBAAkB,EAAE;AAPM,GAAN,CAAtB;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAU,EAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiCC,IAAI,CAACC,SAAL,CAAeb,UAAf,CAAjC;AACA,SAAOA,UAAP;AACD,CAbD;;AAeA,OAAO,MAAMc,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAEH,IAAI,CAACI,KAAL,CAAWN,cAAc,CAACO,OAAf,CAAuB,QAAvB,CAAX,KAAgDnB,sBAAsB,CAAC,0BAAD,CADpD;AAE1BoB,EAAAA,WAAW,EAAE,KAFa;AAG1BC,EAAAA,UAAU,EAAE;AAHc,CAArB;AAMP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACE;AAFtB;;AAIF,SAAK,aAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFrB;;AAIF,SAAK,mBAAL;AACE,+BACKH,KADL;AAEEI,QAAAA,SAAS,EAAEH,MAAM,CAACE;AAFpB;;AAKF;AACE,aAAOH,KAAP;AAlBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMK,KAAK,GAAG9B,KAAK,CAAC+B,aAAN,EAAd","sourcesContent":["import React from 'react'\nimport * as io from 'socket.io-client'\n\nconst createSocketConnection = (url) => {\n  const connection =  io(url, { \n    reconnectionDelay: 1000,\n    reconnection:true,\n    reconnectionAttempts: 10,\n    transports: ['websocket'],\n    agent: false, // [2] Please don't set this to true\n    upgrade: false,\n    rejectUnauthorized: false\n  })\n  console.log(connection)\n  sessionStorage.setItem('socket', JSON.stringify(connection));\n  return connection;\n}\n\nexport const initialState = {\n  socket: JSON.parse(sessionStorage.getItem('socket')) || createSocketConnection('http://192.168.1.48:3000'),\n  gameStarted: false,\n  joinedGame: false,\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'GAME_STARTED':\n      return {\n        ...state,\n        gameStarted: action.payload,\n      };\n    case 'JOINED_GAME':\n      return {\n        ...state,\n        joinedGame: action.payload,\n      };\n    case 'UPDATE_GAME_STATE':\n      return {\n        ...state,\n        gameState: action.payload,\n      };\n    \n    default:\n      return state;\n  }\n\n}\n\nexport const State = React.createContext();"]},"metadata":{},"sourceType":"module"}