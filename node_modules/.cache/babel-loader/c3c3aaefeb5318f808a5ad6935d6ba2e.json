{"ast":null,"code":"import _slicedToArray from \"/Users/Jonas/Development/Web/testGame/test-game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jonas/Development/Web/testGame/test-game/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport useSocket from 'use-socket.io-client';\n\nfunction App() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameState = _useState4[0],\n        setGameState = _useState4[1];\n\n  const _useSocket = useSocket('http://localhost:3000', {\n    autoConnect: false\n  }),\n        _useSocket2 = _slicedToArray(_useSocket, 1),\n        socket = _useSocket2[0];\n\n  useEffect(() => {\n    socket.connect();\n    socket.on('gameUpdate', gameState => {\n      setGameState(gameState);\n    });\n  }, []);\n  socket.on('welcome', msg => {\n    console.log(msg);\n  });\n\n  const connectToGame = () => {\n    console.log('trying to emit');\n    const room = 'room1';\n    socket.emit('join', username, room);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, JSON.stringify(gameState)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => connectToGame(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Connect to game\"), \"Learn React\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Jonas/Development/Web/testGame/test-game/src/App.js"],"names":["React","useState","useEffect","useSocket","App","username","setUsername","gameState","setGameState","autoConnect","socket","connect","on","msg","console","log","connectToGame","room","emit","JSON","stringify","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAGA,SAASC,GAAT,GAAe;AAAA,oBACmBH,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QACNI,QADM;AAAA,QACIC,WADJ;;AAAA,qBAEqBL,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,QAENM,SAFM;AAAA,QAEKC,YAFL;;AAAA,qBAGIL,SAAS,CAAC,uBAAD,EAA0B;AAClDM,IAAAA,WAAW,EAAE;AADqC,GAA1B,CAHb;AAAA;AAAA,QAGNC,MAHM;;AAObR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACC,OAAP;AAEAD,IAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAyBL,SAAD,IAAe;AACrCC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AASAG,EAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAsBC,GAAD,IAAS;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAFD;;AAIA,QAAMG,aAAa,GAAG,MAAM;AAC1BF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAME,IAAI,GAAG,OAAb;AACAP,IAAAA,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAoBb,QAApB,EAA8BY,IAA9B;AACD,GAJD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,CAACC,SAAL,CAAeb,SAAf,CADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAJF,EAOI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGc,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI;AAAQ,IAAA,OAAO,EAAE,MAAMP,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,gBADF,CADF;AAgBD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport useSocket from 'use-socket.io-client';\n\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [gameState, setGameState] = useState({});\n  const [socket] = useSocket('http://localhost:3000', {\n    autoConnect: false,\n  })\n\n  useEffect(() => {\n    socket.connect()\n\n    socket.on('gameUpdate', (gameState) => {\n      setGameState(gameState)\n    })\n  }, [])\n  \n\n  socket.on('welcome', (msg) => {\n    console.log(msg)\n  });\n\n  const connectToGame = () => {\n    console.log('trying to emit')\n    const room = 'room1'\n    socket.emit('join', username, room);\n  }\n  \n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <pre>\n          {JSON.stringify(gameState)}\n        </pre>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n          <input type=\"text\" onChange={(e) => setUsername(e.target.value)}></input>\n          <button onClick={() => connectToGame()}>Connect to game</button>\n          Learn React\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}